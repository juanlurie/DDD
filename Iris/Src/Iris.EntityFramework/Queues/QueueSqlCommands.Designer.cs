//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Iris.EntityFramework.Queues {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class QueueSqlCommands {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal QueueSqlCommands() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Iris.EntityFramework.Queues.QueueSqlCommands", typeof(QueueSqlCommands).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = &apos;queue&apos;)
        ///BEGIN 
        ///	EXEC( &apos;CREATE SCHEMA queue&apos; );
        ///END
        ///
        ///DECLARE @tblname nvarchar(127)
        ///DECLARE @sql nvarchar(4000)
        ///
        ///SET @tblname = quotename(&apos;{0}&apos;)
        ///             
        ///IF NOT  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[queue].&apos; + @tblname) AND type in (N&apos;U&apos;))
        ///BEGIN
        ///	SET @sql = &apos;
        ///    CREATE TABLE [queue].&apos; + @tblname + &apos;
        ///    (
        ///        [Id] [uniqueidentifier] NOT NULL,
        ///		[Priority] [int] NOT NULL DEFAULT 0,
        ///        [RowVersion [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateQueue {
            get {
                return ResourceManager.GetString("CreateQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @tblname nvarchar(127)
        ///DECLARE @sql nvarchar(4000)
        ///SET @tblname = quotename(&apos;{0}&apos;)
        ///
        ///SET @sql = &apos;
        ///	WITH m AS (SELECT TOP(1) [Id] FROM [queue].&apos; + @tblname + &apos; WITH (UPDLOCK, READPAST, ROWLOCK) ORDER BY [Priority] DESC, [RowVersion] ASC)
        ///	DELETE FROM m
        ///	OUTPUT deleted.Id&apos;
        ///	
        ///EXEC (@sql).
        /// </summary>
        internal static string Dequeue {
            get {
                return ResourceManager.GetString("Dequeue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @tblname nvarchar(127)
        ///DECLARE @sql nvarchar(4000)
        ///SET @tblname = quotename(&apos;{0}&apos;)
        ///
        ///SET @sql = &apos;
        ///	INSERT INTO [queue].&apos; + @tblname + &apos; ([Id], [Priority]) 
        ///	VALUES (&apos;&apos;&apos; + CAST(@Id as VARCHAR(50))  + &apos;&apos;&apos;, &apos; + CAST(@Priority as VARCHAR(50)) + &apos;)&apos;
        ///	
        ///EXEC (@sql).
        /// </summary>
        internal static string Enqueue {
            get {
                return ResourceManager.GetString("Enqueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @tblname nvarchar(127)
        ///DECLARE @sql nvarchar(4000)
        ///SET @tblname = quotename(&apos;{0}&apos;)
        ///
        ///SET @sql = &apos;SELECT TOP(1) [Id] FROM [queue].&apos; + @tblname + &apos; WITH (UPDLOCK, READPAST, ROWLOCK) ORDER BY [Priority] DESC, [RowVersion] ASC&apos;
        ///	
        ///EXEC (@sql).
        /// </summary>
        internal static string Peek {
            get {
                return ResourceManager.GetString("Peek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @tblname nvarchar(127)
        ///DECLARE @sql nvarchar(4000)
        ///SET @tblname = quotename(&apos;{0}&apos;)
        ///
        ///SET @sql = &apos;
        ///	DELETE FROM [queue].&apos; + @tblname + &apos; 
        ///	WHERE [Id] = &apos;&apos;&apos; + CAST(@Id as VARCHAR(50))  + &apos;&apos;&apos;
        ///	&apos;
        ///EXEC (@sql).
        /// </summary>
        internal static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
    }
}
